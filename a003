<?php


  $inp = fgets(STDIN);
  $tmp = explode(" ",$inp);
  $l = $tmp[0];
  $n = $tmp[1];
  $m = $tmp[2];

  $rope = array();
  $crossAt = array();
  for($i=0; $i<$n;$i++){
    $rope[$i] = array();
    $crossAt[$i] = array();
  }

  for($i=0; $i<$m; $i++){
    $inp = fgets(STDIN);
    $tmp = explode(" ",$inp);
    $tmp[0] = (int)$tmp[0] -1;
    $tmp[1] = (int)$tmp[1];
    $tmp[2] = (int)$tmp[2];

    $rope[$tmp[0]][$tmp[1]] = array($tmp[0]+1,$tmp[2]);
    $rope[$tmp[0]+1][$tmp[2]] = array($tmp[0],$tmp[1]);

    if(!in_array($tmp[1],$crossAt[$tmp[0]]))
        $crossAt[$tmp[0]][] = ($tmp[1]);
    if(!in_array($tmp[2],$crossAt[$tmp[0]+1]))
        $crossAt[$tmp[0]+1][] = ($tmp[2]);
  }

  for($i=0;$i<$n;$i++){
    ksort($rope[$i]);
    sort($crossAt[$i]);
    //var_dump($crossAt[$i]);
  }

  $p = $rope[0][$crossAt[0][count($crossAt[0])-1]];

  //var_dump($crossAt);


  while(true){
    //var_dump($crossAt[$p[0]]);
    //var_dump($p);

    $tmp = array_search($p[1],$crossAt[$p[0]]);

    $tmp = (int)$tmp;
    //var_dump($tmp);
    //var_dump($p);
    //ゴール
    if($tmp===0)
      break;

    $p = $rope[$p[0]][$crossAt[$p[0]][$tmp-1]];

  }
  echo $p[0]+1;

?>
[ec2-user@ip-10-0-0-159 ~]$ cat a003.php
<?php

//リバーシ
//1:黒
//-1:白

function init(){
  global $board;
  global $size;
  for($i=0;$i<$size;$i++){
    for($j=0;$j<$size;$j++){
      $board[$j][$i] = 0;
    }
  }
  $board[3][3] = -1;
  $board[3][4] = 1;
  $board[4][3] = 1;
  $board[4][4] = -1;
}

//123
//4 6
//789
function reverse($player,$x,$y,$d){
  global $board;
  $dx=0;
  $dy=0;
  $px=$x;
  $py=$y;


  if(($d%3)===0)
    $dx=1;
  else if(($d===2) || ($d===8))
    $dx=0;
  else
    $dx = -1;

  if($d<=3)
    $dy=-1;
  else if($d>=7)
    $dy=1;
  else
    $dy=0;

  $board[$px][$py] = $player;
  while($board[$px+$dx][$py+$dy]!==$player){
    $px+=$dx;
    $py+=$dy;
    $board[$px][$py]=$player;
  }

}

//123
//4 6
//789
function check_reversable($player, $x,$y,$d){
  global $board;
  global $size;
  $dx=0;
  $dy=0;
  $px=$x;
  $py=$y;


  if(($d%3)===0)
    $dx=1;
  else if(($d===2) || ($d===8))
    $dx=0;
  else
    $dx = -1;

  if($d<=3)
    $dy=-1;
  else if($d>=7)
    $dy=1;
  else
    $dy=0;

  $px+=$dx;
  $py+=$dy;

  if( ($px<0) || ($px>=$size) || ($py<0) || ($py>=$size) )
    return false;
  if($board[$px][$py]!==($player*(-1)))
    return false;

  while( !(($px+$dx<0) || ($px+$dx>=$size) || ($py+$dy<0) || ($py+$dy>=$size) )){
    $px+=$dx;
    $py+=$dy;

    if($board[$px][$py]===0)
      return false;
    else if($board[$px][$py]===$player)
      return true;
  }
  return false;
}

//123
//4 6
//789

function put_stone($player,$x,$y){
  global $board;
  global $size;

  if(($x<0)||($x>=$size) ||($y<0) || ($y>=$size))
    return;
  if($board[$x][$y]!==0)
    return;

  for($i=1;$i<=9;$i++){
    if($i===5)
       continue;

    if(check_reversable($player,$x,$y,$i)){
      //echo "$player($x,$y):$i\n)";
      reverse($player,$x,$y,$i);
    }
  }
}

function count_stone($player){
  global $board;
  global $size;
  $c=0;

  for($i=0;$i<$size;$i++){
    for($j=0;$j<$size;$j++){
      if($board[$j][$i]===$player)
        $c++;
    }
  }
  return $c;
}

function draw_board(){
  global $board;
  global $size;

  for($i=0;$i<$size;$i++){
    for($j=0;$j<$size;$j++){
      echo $board[$j][$i];
    }
    echo"\n";
  }
}

$board = array();
$size = 8;
for($i=0;$i<$size;$i++)
  $board[$i] = array();
init();
//draw_board();

$input_lines = fgets(STDIN);
$n = (int)$input_lines;

for($i=0;$i<$n;$i++){
  $input_lines = fgets(STDIN);
  $tmp = explode(" ",$input_lines);
  $player=1;

  if(strcmp($tmp[0],'B')===0)
    $player=1;
  else
    $player=-1;

  $px = (int)$tmp[1] -1;
  $py = (int)$tmp[2] -1;

  put_stone($player,$px,$py);
  //draw_board();
}

$b = count_stone(1);
$w = count_stone(-1);

if($b<10)
  echo "0";
echo "$b-";
if($w<10)
  echo "0";
echo "$w ";

if($b<$w)
  echo "The white won!";
else if($w<$b)
  echo "The black won!";
else
  echo "Draw!";

?>
